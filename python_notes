-> rindex: If substring exists inside the string, it returns the highest index in the string where substring is found.
example:
a = "ababcabcc"
a.rindex('c')
output: 8

--> dict.fromkeys(['name','age','city'],'unkown')
output : {'name':'unknown','age':'unknown','city':'unknown'}

--> import textwrap
print(textwrap.wrap("ADABCDCCE",3))
output : ['ADA','BCD','CCE']
- It divides the given string in chunks of given size and returns a list

--> from collections import OrderedDict
OrderedDict.fromkeys()

--> To take unknown no of inputs
name, *line = input().split()
here it will save the first input in name
Then the next all inputs will be appended in list one by one
eg: input: aman 5 6 45 4
name = 'aman'
line = ['5','6','45','4']

--> implement an OrderedDict
y = OrderedDict()
now y is a dictionary and now you can append keys and values.


--> itertools
itertools.accumulate(data,func/attr)    //it compares the function/attribute with each element of data
itertools.chain(*lists)  //makes an iterator of given lists
itertools.combinations(data,size)   //gives the combinations of size
itertools.islice(data,start,stop,step)
itertools.islice(data,n)  //cuts first n elements
itertools.permutations(data)    //gives all permutations possible
itertools.product(data1,data2)  //cartesian product
itertools.starmap(function,iterable)
//This function makes an iterator that computes the function using arguments obtained from the iterable
//eg (import operator)
data = [(2, 6), (8, 4), (7, 3)]
result = itertools.starmap(operator.mul, data)
for each in result:
    print(each)

//output
12
32
21
